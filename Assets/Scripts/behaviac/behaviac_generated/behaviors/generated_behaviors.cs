// ---------------------------------------------------------------------
// THIS FILE IS AUTO-GENERATED BY BEHAVIAC DESIGNER, SO PLEASE DON'T MODIFY IT BY YOURSELF!
// Export file: ../Assets/Scripts/behaviac/behaviac_generated/behaviors/generated_behaviors.cs
// ---------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Reflection;

namespace behaviac
{
	// Source file: PlayerAI

	[behaviac.GeneratedTypeMetaInfo()]
	class DecoratorLoop_bt_PlayerAI_node4 : behaviac.DecoratorLoop
	{
		public DecoratorLoop_bt_PlayerAI_node4()
		{
			m_bDecorateWhenChildEnds = true;
			m_bDoneWithinFrame = false;
		}
		protected override int GetCount(Agent pAgent)
		{
			return -1;
		}
	}

	[behaviac.GeneratedTypeMetaInfo()]
	class Action_bt_PlayerAI_node0 : behaviac.Action
	{
		public Action_bt_PlayerAI_node0()
		{
			this.m_resultOption = EBTStatus.BT_INVALID;
		}
		protected override EBTStatus update_impl(behaviac.Agent pAgent, behaviac.EBTStatus childStatus)
		{
			behaviac.EBTStatus result = ((GameGeek.Character.PlayerAI)pAgent).Move();
			return result;
		}
	}

	public static class bt_PlayerAI
	{
		public static bool build_behavior_tree(BehaviorTree bt)
		{
			bt.SetClassNameString("BehaviorTree");
			bt.SetId(-1);
			bt.SetName("PlayerAI");
			bt.IsFSM = false;
#if !BEHAVIAC_RELEASE
			bt.SetAgentType("GameGeek.Character.PlayerAI");
#endif
			// children
			{
				DecoratorLoop_bt_PlayerAI_node4 node4 = new DecoratorLoop_bt_PlayerAI_node4();
				node4.SetClassNameString("DecoratorLoop");
				node4.SetId(4);
#if !BEHAVIAC_RELEASE
				node4.SetAgentType("GameGeek.Character.PlayerAI");
#endif
				bt.AddChild(node4);
				{
					Action_bt_PlayerAI_node0 node0 = new Action_bt_PlayerAI_node0();
					node0.SetClassNameString("Action");
					node0.SetId(0);
#if !BEHAVIAC_RELEASE
					node0.SetAgentType("GameGeek.Character.PlayerAI");
#endif
					node4.AddChild(node0);
					node4.SetHasEvents(node4.HasEvents() | node0.HasEvents());
				}
				bt.SetHasEvents(bt.HasEvents() | node4.HasEvents());
			}
			return true;
		}
	}

}
